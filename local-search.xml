<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Web应用开发作业——Ajax机制实现</title>
    <link href="/2021/06/25/Homework/"/>
    <url>/2021/06/25/Homework/</url>
    
    <content type="html"><![CDATA[<p><strong>说明：本次web作业的所有代码存放于public_html下的homework文件夹中。由于存放在ECNU的服务器上，所以只有连我们学校的校园网才能访问哦</strong></p><hr><h3 id="1-作业链接"><a href="#1-作业链接" class="headerlink" title="1.作业链接"></a>1.作业链接</h3><p>作业链接向<code>homework</code>文件夹中的<code>register.php</code>文件，点击<a href="http://172.23.132.107/~webjqruan/homework/register.php">此处</a>进行跳转。</p><h3 id="2-数据库介绍"><a href="#2-数据库介绍" class="headerlink" title="2. 数据库介绍"></a>2. 数据库介绍</h3><p>在介绍Ajax技术之前，首先要说明一下数据库中的表以及各字段的情况。本次作业中只使用了1个表<code>user</code>，表中有3个字段，如下图所示：</p><p><img src="/img/hw1/p1.png"></p><p><code>id</code>是用来区分用户、可以自增的主键，而<code>username</code>和<code>password</code>则是常规的用户名和密码。</p><h3 id="3-Ajax应用说明"><a href="#3-Ajax应用说明" class="headerlink" title="3. Ajax应用说明"></a>3. Ajax应用说明</h3><p><strong>注意：由于登录与注册界面的按钮实际上都是通过<code>&lt;input&gt;</code>标签实现的，所以点击中间的文字才能有效地提交</strong></p><p>此次作业通过一个用户的<strong>登录/注册系统</strong>来展示编写的Ajax异步检验机制。在这个系统中一共有2​处应用了Ajax技术，接下来将对其进行介绍：</p><ul><li><strong>注册界面（register.php）</strong></li></ul><p>我们都知道，一个用户系统中<strong>不可能</strong>存在2​个重名的用户，所以在注册界面的用户名输入处实现了Ajax检验。这里的Ajax技术被集成在<code>jQuery</code>的表单检验插件<code>validate</code>中；在对<code>username</code>的输入进行检验时，<code>remote</code>属性会使用Ajax向<code>checkName.php</code>发送数据，此处的代码如下所示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">   $(<span class="hljs-string">&quot;#formValidate&quot;</span>).validate(&#123;</span><br>       rules: &#123;<br>           username: &#123;<br><span class="javascript">               required: <span class="hljs-literal">true</span>,</span><br>               minlength: 3,<br>               remote: &#123; <br><span class="javascript">         <span class="hljs-comment">//romote处可以进行远端验证，这里可以使用ajax，语法与jQuery中的$.ajax类似</span></span><br><span class="javascript">                   url: <span class="hljs-string">&#x27;routers/checkName.php&#x27;</span>, <span class="hljs-comment">//选择发送到进行验证的对象</span></span><br><span class="javascript">                    type: <span class="hljs-string">&#x27;post&#x27;</span>,</span><br><span class="javascript">                    data: &#123; <span class="hljs-comment">//组织要发送给验证文件的数据格式</span></span><br><span class="javascript">                        <span class="hljs-string">&quot;username&quot;</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">                            <span class="hljs-keyword">return</span> $(<span class="hljs-string">&quot;#username&quot;</span>).val(); <span class="hljs-comment">//这里只获取username处的输入传给远端</span></span><br>                        &#125;<br>                    &#125;<br>               &#125;<br>           &#125;,<br>password: &#123;<br><span class="javascript">required: <span class="hljs-literal">true</span>,</span><br>minlength: 5<br>&#125;,<br>       &#125;,<br><span class="javascript">    <span class="hljs-comment">/* ... */</span></span><br>    &#125;);<br>   <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>checkName.php</code>在接受数据后会在数据库中进行是否重名的核验，最后将返回结果给前端页面<code>validate</code>控件处，如果出现重名则会将错误信息打印在输入框旁边。</p><p>最终的效果如下图所示：</p><p><img src="/img/hw1/p2.png"></p><ul><li><strong>登录界面的不刷新核验（login.php）</strong></li></ul><p>在实现了上述的用户名重名的异步检验以后，我觉得还有点没玩够，所以在登录界面处实现了利用Ajax技术的用户名/密码不刷新核验。这里首先要依赖<code>validate</code>控件完成<strong>不需要</strong>后端数据的核验，在通过初步验证后，<code>validate</code>控件会进入到由用户自定义的<code>submitHandler</code>函数处，这里在这里使用Ajax技术对页面进行不刷新验证，代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html">   <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">   $(<span class="hljs-string">&quot;#formValidate&quot;</span>).validate(&#123;</span><br><span class="javascript">       <span class="hljs-comment">/* ... */</span></span><br><span class="javascript">       submitHandler:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">form</span>)</span>&#123;</span><br><span class="javascript">            <span class="hljs-keyword">var</span> username = $(<span class="hljs-string">&#x27;#username&#x27;</span>).val(); <span class="hljs-comment">//获取用户输入的用户名</span></span><br><span class="javascript">            <span class="hljs-keyword">var</span> password = $(<span class="hljs-string">&#x27;#password&#x27;</span>).val(); <span class="hljs-comment">//获取用户输入的密码</span></span><br><span class="javascript">            $.ajax(&#123; <span class="hljs-comment">//使用Ajax机制，发送到login-router.php中进行核验</span></span><br><span class="javascript">               <span class="hljs-keyword">async</span>: <span class="hljs-literal">true</span> ,</span><br><span class="javascript">               url : <span class="hljs-string">&quot;routers/login-router.php&quot;</span>,</span><br><span class="javascript">               type : <span class="hljs-string">&quot;POST&quot;</span>,</span><br>               data : &#123;<br><span class="javascript">                   <span class="hljs-string">&quot;username&quot;</span> : username,</span><br><span class="javascript">                   <span class="hljs-string">&quot;password&quot;</span> : password</span><br>                &#125;,<br><span class="javascript">               success : <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">str</span>) </span>&#123;<span class="hljs-comment">//success处接受php文件返回的结果，对页面状态进行更改</span></span><br><span class="javascript">                   <span class="hljs-keyword">if</span>(str==<span class="hljs-string">&#x27;false&#x27;</span>)&#123; <span class="hljs-comment">//若用户不存在或密码错误，则跳出弹窗提醒</span></span><br><span class="javascript">                       alert(<span class="hljs-string">&quot;用户名或密码输入错误&quot;</span>);</span><br><span class="javascript">                   &#125;<span class="hljs-keyword">else</span></span><br><span class="javascript">                   &#123; <span class="hljs-comment">//核验（登录）成功，跳转到index.php界面</span></span><br><span class="javascript">                      <span class="hljs-built_in">window</span>.location.href=<span class="hljs-string">&quot;index.php&quot;</span>;</span><br>                   &#125;<br>               &#125;<br>            &#125;);<br><span class="javascript"><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span><br>       &#125;<br><span class="javascript"><span class="hljs-comment">/* ... */</span></span><br>    &#125;);<br>   <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Ajax技术将会把数据发送到<code>login-router.php</code>中进行用户名和密码的核验，若用户存在且输入的密码正确，<code>php</code>文件将会在<code>$_SESSION</code>中记录用户登录的信息，并返回“true”给<code>$.ajax</code>中<code>success</code>处的函数，此时就会进行页面跳转；如果核验错误则<code>php</code>文件将会返回“false”给<code>$.ajax</code>中<code>success</code>处的函数，此时页面上会跳出弹窗进行提醒，这样就完成了在<strong>不刷新页面</strong>的情况下的用户名/密码异步核验了。</p><p>最终的效果如下图所示：</p><p><img src="/img/hw1/p3.png"></p><h3 id="4-登录成功后"><a href="#4-登录成功后" class="headerlink" title="4. 登录成功后"></a>4. 登录成功后</h3><p>用户在登录以后会进入到<code>index.php</code>页面中，很遗憾的一点是这个页面上没有多少东西，只是一个成功登录的标志（不过会根据<code>$_SESSION</code>中的信息打印用户的名称）。用户可以选择<code>退出登录</code>，这时将会进入<code>logout.php</code>中清除对应浏览器<code>SESSION</code>中的所有数据、最后重新回到<code>login.php</code>界面。</p><p>这篇文章到这里就结束啦，希望你喜欢XD。</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>复健</title>
    <link href="/2021/06/22/comeback/"/>
    <url>/2021/06/22/comeback/</url>
    
    <content type="html"><![CDATA[<p>因为期中以后忙着忙那，一直都没有时间来博客上添点新的东西，所以打算从暑假开始复健，<strong>重新</strong>开始在博客上写作！！ </p><p>P.S. 网易云好像限制<code>aplayer</code>播放器抓取资源了，我今天登上博客以后它一直在报问题，希望我能解决…</p>]]></content>
    
    
    <categories>
      
      <category>文字</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>集合啦，动物森友会！</title>
    <link href="/2021/04/16/first/"/>
    <url>/2021/04/16/first/</url>
    
    <content type="html"><![CDATA[      <div id="aplayer-EuVgBqdl" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1433983480" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"    ></div><hr>&nbsp;&nbsp;接触到**动森**的原因果然还是Switch放在手上吃灰的时间实在是太久了。不知为什么，虽然对任天堂非常的憧憬，但是Switch上的游戏总让我提不起兴趣来。但是朋友一直有在玩动森，直到有一天我在他旁边看他玩Switch，怎么说呢，动森里的小动物确实治愈到我了，所以后来我也买了动森，踏上了前往无人岛的旅途。]]></content>
    
    
    <categories>
      
      <category>文字</category>
      
    </categories>
    
    
    <tags>
      
      <tag>激推</tag>
      
      <tag>游戏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>开始的话</title>
    <link href="/2021/04/14/hello-world/"/>
    <url>/2021/04/14/hello-world/</url>
    
    <content type="html"><![CDATA[<p>  终于把博客给搭起来了，以后会逐渐向里面添加内容的，敬请期待XD.</p>]]></content>
    
    
    <categories>
      
      <category>文字</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
